name: "Build containers"

# Heavily inspired by https://github.com/onedr0p/containers/blob/main/.github/workflows/build-images.yaml

on:
  workflow_call:
    inputs:
      imagesToBuild:
        required: false
        type: string
        default: ''
      pushImages:
        required: false
        default: false
        type: boolean

jobs:
  gen-matrix:
    name: Generate matrices
    runs-on: ubuntu-latest
    outputs:
      matrices: ${{ steps.generate-matrices.outputs.matrices }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up cue
        uses: cue-lang/setup-cue@v1.0.0
        with:
          version: "0.6.0"

      - name: Generate matrices
        id: generate-matrices
        run: |
          matrices="$(cue cmd -t imagefilter="${{ inputs.appsToBuild }}" matrix ./...)"
          echo "matrices=${matrices}" >> $GITHUB_OUTPUT
          echo "${matrices}"

  build:
    name: Build ${{ matrix.image.name }} (${{ matrix.image.platform }})
    runs-on: ubuntu-latest
    needs:
      - gen-matrix
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        image: ["${{ fromJSON(needs.gen-matrix.outputs.matrices).imageBuild }}"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Image
        id: build
        uses: docker/build-push-action@v5
        with:
          build-args: |-
            VERSION=${{ matrix.image.version }}
          context: .
          platforms: ${{ matrix.image.platform  }}
          file: images/${{ matrix.image.name }}/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Export Digest
        id: export-digest
        if: ${{ inputs.pushImages }}
        run: |
          mkdir -p /tmp/${{ matrix.image.name }}/digests
          digest="${{ steps.build.outputs.digest }}"
          echo "${{ matrix.image.name }}" > "/tmp/${{ matrix.image.name }}/digests/${digest#sha256:}"

      - name: Upload Digest
        if: ${{ inputs.pushImages }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.image.name }}
          path: /tmp/${{ matrix.image.name }}/*
          if-no-files-found: error
          retention-days: 1

  merge:
    name: Merge ${{ matrix.image.name }}
    runs-on: ubuntu-latest
    needs: 
      - gen-matrix
      - build
    if: ${{ inputs.pushImages }}
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        image: ["${{ fromJSON(needs.gen-matrix.outputs.matrices).merge }}"]

    steps: 
      - name: Download Digests
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.image.name }}
          path: /tmp/${{ matrix.image.name }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log Files
        working-directory: /tmp/${{ matrix.image.name }}/digests
        run: |
          ls -la
          cat *

      - name: Export GITHUB_REPO_OWNER_LC
        run: |
          echo "GITHUB_REPO_OWNER_LC=${GITHUB_OWNER,,}" >>${GITHUB_ENV}
        env:
          GITHUB_OWNER: '${{ github.repository_owner }}'

      - name: Create manifest list and push
        working-directory: /tmp/${{ matrix.image.name }}/digests
        env:
          TAGS: ${{ toJSON(matrix.image.tags) }}
        run: |
          docker buildx imagetools create $(jq -cr '. | map("-t ghcr.io/${{ env.GITHUB_REPO_OWNER_LC }}/${{matrix.image.name}}:" + .) | join(" ")'  <<< "$TAGS") \
              $(printf 'ghcr.io/${{ env.GITHUB_REPO_OWNER_LC }}/${{ matrix.image.name }}@sha256:%s ' *)
      
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ghcr.io/${{ env.GITHUB_REPO_OWNER_LC }}/${{ matrix.image.name }}:${{ matrix.image.tags[0] }}
